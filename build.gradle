plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id "org.sonarqube" version "4.3.0.3225"
}

group = 'com.PhotoCardTradeProjectBack'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // QueryDSL JPA 라이브러리
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // java.lang.NoClassDefFoundError(javax.annotation.Generated) 발생 시 추가
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'mysql:mysql-connector-java:8.0.23'

    //security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    //h2
    runtimeOnly 'com.h2database:h2'
    //jwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
    //jasypt
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'
    //json
    implementation 'com.google.code.gson:gson:2.8.7'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    //string utils
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    //file utils
    implementation group: 'com.drewnoakes', name: 'metadata-extractor', version: '2.18.0'
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    //uuid
    implementation group: 'com.fasterxml.uuid', name: 'java-uuid-generator', version: '4.3.0'
//    implementation 'com.google.firebase:firebase-admin:9.2.0'
    //aws
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    //oauth2
    implementation 'org.springframework.security:spring-security-oauth2-client'
    implementation 'org.springframework.security:spring-security-oauth2-jose'

    // Junit library
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:3.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'com.querydsl:querydsl-jpa'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'org.assertj:assertj-core:3.24.2'

    implementation group: 'org.javassist', name: 'javassist', version: '3.15.0-GA'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // stomp 설정 추가
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // ssh 터널링
    implementation 'com.github.mwiede:jsch:0.2.17'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Spring Data Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // mongodb 설정 추가
//    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    // kafka
//    implementation 'org.springframework.kafka:spring-kafka'

    // Testcontainers
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'

    // Testcontainers - LocalStack
    testImplementation "org.testcontainers:localstack:1.20.4"
}

tasks.named('test') {
    useJUnitPlatform()
}

//QueryDSL 빌드 옵션
def querydslDir = "$buildDir/generated/querydsl"
sourceSets {
    main.java.srcDirs += [querydslDir]
}

task copySecret(type: Copy) {
    from './photocard_security'
    into './src/main/resources'
}
tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
    file(querydslDir).deleteDir()
}

sonarqube {
    properties {
        property "sonar.projectKey", "capo-backend"
        property "sonar.host.url", "http://13.124.217.23:9000"
        property "sonar.login", "squ_c4fb1b4048ff7711b6b12c2cc43c45b900b09982"
    }
}