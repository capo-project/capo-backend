plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.PhotoCardTradeProjectBack'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Junit library
	testImplementation 'junit:junit:4.12' // JUnit 4
	// QueryDSL JPA 라이브러리
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// java.lang.NoClassDefFoundError(javax.annotation.Generated) 발생 시 추가
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'mysql:mysql-connector-java:8.0.23'

	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	//h2
	runtimeOnly 'com.h2database:h2'
	//jwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
	//jasypt
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'
	//json
	implementation 'com.google.code.gson:gson:2.8.7'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation("org.springframework.security:spring-security-test")
	implementation group: 'org.javassist', name: 'javassist', version: '3.15.0-GA'
}

tasks.named('test') {
	useJUnitPlatform()
}

//QueryDSL 빌드 옵션
def querydslDir = "$buildDir/generated/querydsl"
sourceSets {
   main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
	file(querydslDir).deleteDir()
}