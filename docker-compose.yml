version: "3.9" # 파일 규격 버전

services: #이 항목 밑에 실행하려는 컨테이너들을 정의
  back:
     container_name: photocardBack
     build:
       context: ../photocardback
       dockerfile: Dockerfile
     restart: always
     ports:
       - 8080:8080
         #  front:
         #    container_name: front
         #    build:
         #      context: ../PhotocardTradeProject
         #      dockerfile: Dockerfile
         #    restart: always
         #    ports:
         #      - 3000:80
  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    environment:
      - TZ=Asia/Seoul
    ports:
      - "80:80"
      - "443:443"
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  mysql: # 서비스 명
    image: mysql/mysql-server:8.0.23 #사용할 이미지
    container_name: photocardTrade # 컨테이너 이름 설정
    ports :
      - "3306:3306" # 접근 포트 설정 ( 컨테이너 외부:컨테이너 내부)
    restart: always
    environment: # -e 옵션
      MYSQL_DATABASE:  photocard# 데이터 베이스 이름
      MYSQL_ROOT_HOST: '%' # MYSQL HOST
      MYSQL_ROOT_PASSWORD: "1234" # MYSQL 패스워드 설정 옵션
      TZ: "Asia/Seoul"
    command: # 명령어 실행
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - /home/ubuntu/docker/data/mysql:/var/lib/mysql # -v 옵션 (디렉토리 마운트 설정)
